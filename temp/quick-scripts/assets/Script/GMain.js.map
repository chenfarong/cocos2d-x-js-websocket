{"version":3,"sources":["GMain.js"],"names":["cc","Class","extends","Component","properties","label","default","type","Label","btnConn","Button","text","myListener","EventListener","myListener1","labNetState","onLoad","string","create","event","CUSTOM","target","eventName","callback","console","log","eventManager","addListener","labNode","node","getChildByName","color","labNode2","getComponent","XGame","dsid","msg","labelNode","fontSize","XNet","ListenerAdd","update","dt","connect"],"mappings":";;;;;;AACA;;AACA;;AAGAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,eAAO;AACHC,qBAAS,IADN;AAEHC,kBAAMP,GAAGQ;AAFN,SADC;AAKRC,iBAAUT,GAAGU,MALL;AAMR;AACAC,cAAM,eAPE;AAQRC,oBAAaZ,GAAGa,aARR;AASRC,qBAAa,IATL;;AAWRC,qBAAYf,GAAGQ;;AAXP,KAHP;;AAoBL;AACAQ,YAAQ,kBAAY;AAChB,aAAKX,KAAL,CAAWY,MAAX,GAAoB,KAAKN,IAAzB;;AAEC,aAAKC,UAAL,GAAkBZ,GAAGa,aAAH,CAAiBK,MAAjB,CAAwB;AACvCC,mBAAUnB,GAAGa,aAAH,CAAiBO,MADY;AAEvCC,oBAAU,IAF6B;AAGvCC,uBAAU,YAH6B,EAGhB;AACvBC,sBAAW,kBAAUJ,KAAV,EAAiB;;AAExB;AACA;;AAEA;AACA;AACA;AACA;AACAK,wBAAQC,GAAR,CAAY,WAAZ;AACH;AAdsC,SAAxB,CAAlB;AAgBDzB,WAAG0B,YAAH,CAAgBC,WAAhB,CAA4B,KAAKf,UAAjC,EAA4C,CAA5C;;AAIA,YAAIgB,UAAQ,KAAKC,IAAL,CAAUC,cAAV,CAAyB,aAAzB,CAAZ;AACAF,gBAAQG,KAAR,GAAgB,IAAI/B,GAAG+B,KAAP,CAAa,GAAb,EAAiB,GAAjB,EAAqB,CAArB,EAAuB,GAAvB,CAAhB;AACA,YAAIC,WAASJ,QAAQK,YAAR,CAAqBjC,GAAGQ,KAAxB,CAAb;AACA,YAAGwB,QAAH,EAAY;AACRA,qBAASf,MAAT,GAAgBiB,aAAMC,IAAtB;AACH;;AAED;;;;;;;AAOA,aAAKrB,WAAL,GAAiB,EAACS,UAAS,kBAASa,GAAT,EAAaf,MAAb,EAAoB;AAC3CG,wBAAQC,GAAR,CAAY,WAAZ;AACA;;AAEA,oBAAIY,YAAYhB,OAAOQ,IAAP,CAAYC,cAAZ,CAA2B,aAA3B,CAAhB;AACA,oBAAGO,SAAH,EAAa;AACT,wBAAIhC,QAAQgC,UAAUJ,YAAV,CAAuBjC,GAAGQ,KAA1B,CAAZ;AACI,wBAAGH,KAAH,EAAU;AACNA,8BAAMiC,QAAN,GAAiB,EAAjB;AACA;;AAEAjC,8BAAMY,MAAN,GAAe,MAAf;AAEH;AACR;AAEJ,aAhBgB,EAgBfI,QAAO,IAhBQ,EAAjB;;AAkBAkB,sBAAKC,WAAL,CAAiB,YAAjB,EAA8B,KAAK1B,WAAnC;AACA;;AAED;AAEF,KAjFI;;AAmFL;AACA2B,YAAQ,gBAAUC,EAAV,EAAc,CAErB,CAtFI;;AAwFLC,aAAQ,mBACR;AACInB,gBAAQC,GAAR,CAAY,eAAZ;AACAc,sBAAKI,OAAL;AACH;;AA5FI,CAAT","file":"GMain.js","sourceRoot":"../../../../assets/Script","sourcesContent":["\nimport {XNet} from './Network';\nimport {XGame} from './GCore';\n\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        btnConn : cc.Button,\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!',\n        myListener : cc.EventListener,\n        myListener1: null,\n\n        labNetState:cc.Label\n        \n    },\n\n    \n\n    // use this for initialization\n    onLoad: function () {\n        this.label.string = this.text;\n\n         this.myListener = cc.EventListener.create({\n            event    :cc.EventListener.CUSTOM,\n            target   :this,\n            eventName:\"XNetOpened\",//最好参考cocos将此参数定义为一个常量\n            callback : function (event) {\n    \n                //获取Bear实例对象\n                //var target = event.getUserData();\n    \n                //方法调用\n                //target.bearJump();\n                //target.bearEat();\n                //target._labNetState.string=\"connected\";\n                console.log(\"xxxxxxxxx\");\n            }\n        });\n        cc.eventManager.addListener(this.myListener,1);\n\n\n\n        var labNode=this.node.getChildByName('labNetState');\n        labNode.color = new cc.color(255,255,0,255);\n        var labNode2=labNode.getComponent(cc.Label);\n        if(labNode2){\n            labNode2.string=XGame.dsid;\n        }\n\n        /*\n        XNet.ListenerAdd(\"XNetOpened\",function(msg){\n            console.log(\"xxxxxxxxx\");\n            //this.labelNetState.string=\"xxx\";\n        });\n        */\n\n        this.myListener1={callback:function(msg,target){\n            console.log(\"xxxxxxxxx\");\n            //this.labNetState.string=\"xxx\";\n            \n            var labelNode = target.node.getChildByName('labNetState');\n            if(labelNode){\n                var label = labelNode.getComponent(cc.Label);\n                    if(label) {\n                        label.fontSize = 24;\n                        //labelNode.color = btnTitleColor;\n                       \n                        label.string = \"xxxx\";\n                        \n                    }\n            }\n            \n        },target:this};\n\n        XNet.ListenerAdd(\"XNetOpened\",this.myListener1);\n        //XNet.ListenerAdd(\"XNetOpened\",{callback:this.myListener1,target:this});\n\n       // this.labNetState.string=XGame.dsid;\n\n    },\n\n    // called every frame\n    update: function (dt) {\n\n    },\n\n    connect:function()\n    {\n        console.log(\"click connect\");\n        XNet.connect();\n    },\n\n});\n"]}