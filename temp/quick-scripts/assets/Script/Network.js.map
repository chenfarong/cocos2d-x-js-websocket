{"version":3,"sources":["Network.js"],"names":["WebSocket","window","MozWebSocket","XNet","cc","Class","extends","Component","statics","_socket","ws_host","_netPros","Map","_netEars","Array","_connectTimeout","_wsReConnectTimes","_reConnectFlag","_reConnectMax","dispatchXNet","event","msg","forEach","item","index","array","netEvent","listeners","slice","i","length","callback","target","host","uri","connect","readyState","OPEN","console","log","onopen","_onOpen","bind","onerror","_onError","onclose","_onClose","onmessage","_onMessage","disconnect","nil","XOpcodes","XC_NET_CONNECTED","cmd","rc","error","XC_NET_ERROR","XC_NET_DISCONNECTED","JSON","parse","data","ListenerAdd","listenerList","push","ListenerRemove","splice","EarAdd","ear","EarRemove","pos","indexOf","connectCheck","CONNECTING","XC_NET_CONNECT_TIMEOUT","CLOSED","sendString","text","send"],"mappings":"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","file":"Network.js","sourceRoot":"../../../../assets/Script","sourcesContent":["var WebSocket = WebSocket || window.WebSocket || window.MozWebSocket;\n\nimport { XOpcodes } from \"./Opcodes\";\n\n//个人采用文本方式来收发数据\n//频率高的采用二进制数据进行收发 例如 移动数据包\n\nvar XNet = cc.Class({\n  extends: cc.Component,\n  statics: {\n    _socket: {},\n    ws_host: \"ws://test.9966886699.com:8086/game\",\n    _netPros: new Map(),\n    _netEars: new Array(),\n    _connectTimeout: 5,\n    _wsReConnectTimes: 0,\n    _reConnectFlag: false,\n    _reConnectMax: 3,\n\n    dispatchXNet(event, msg) {\n      //        XGame.DoXEvent(event,msg);\n\n      this._netEars.forEach(function(item, index, array) {\n        item.netEvent(event, msg);\n      });\n\n      if (this._netPros[event]) {\n        var listeners = this._netPros[event].slice();\n        for (var i = 0; i < listeners.length; i++) {\n          listeners[i].callback(msg, listeners[i].target);\n        }\n      }\n    },\n\n    host: function(uri) {\n      this.ws_host = uri;\n    },\n\n    connect: function() {\n      if (this._socket.readyState != WebSocket.OPEN) {\n        console.log(\"connect \" + this.ws_host);\n        //            if(this._socket!=null) delete this._socket;\n\n        this._socket = new WebSocket(this.ws_host);\n        this._socket.onopen = this._onOpen.bind(this);\n        this._socket.onerror = this._onError.bind(this);\n        this._socket.onclose = this._onClose.bind(this);\n        this._socket.onmessage = this._onMessage.bind(this);\n\n        //cc.director.getScheduler().schedule(this.connectTimeoutCheck,this,1, 5, 3,false);\n      }\n      return this;\n    },\n\n    disconnect() {\n      if (this._socket && this._socket.readyState == 1) {\n        delete this._socket;\n        this._socket = nil;\n        //cc.director.getScheduler().\n      }\n    },\n\n    readyState() {\n      if (this._socket) return this._socket.readyState;\n      return -1;\n    },\n\n    _onOpen: function(event) {\n      console.log(\"connected \" + this.ws_host);\n      //utils.OutObj(evt);\n      //var event = new cc.Event(this,\"Network\",true);\n      //event.setUserData(\"{...}\");\n      //cc.eventTarget.dispatchEvent(event);\n      // cc.EventTarget.dispatchEvent(\"adas\",\"123\",evt);\n\n      //\n      //cc.eventManager.dispatchCustomEvent(\"XNetOpened\", {a:1,b:2});\n\n      //var event=new cc.EventCustom(\"XNetOpened\");\n      //cc.SystemEvent.dispatchCustomEvent(event);\n      XNet.dispatchXNet(XOpcodes.XC_NET_CONNECTED, {\n        cmd: XOpcodes.XC_NET_CONNECTED,\n        rc: 0\n      });\n    },\n\n    _onError: function(event) {\n      console.error(\"WebSocket error observed:\", event);\n      //if(_reConnectFlag)\n      //{\n      //    connect();\n      //}\n      XNet.dispatchXNet(XOpcodes.XC_NET_ERROR, {\n        cmd: XOpcodes.XC_NET_ERROR,\n        rc: event\n      });\n    },\n\n    _onClose: function(event) {\n      console.log(\"WebSocket is closed now.\");\n      XNet.dispatchXNet(XOpcodes.XC_NET_DISCONNECTED, {\n        cmd: XOpcodes.XC_NET_DISCONNECTED,\n        rc: 0\n      });\n    },\n\n    _onMessage: function(event) {\n      // console.debug(\"WebSocket message received:\", event);\n      //let str = event.data;\n      let msg = JSON.parse(event.data);\n      console.log(msg.cmd);\n      XNet.dispatchXNet(msg.cmd, msg);\n    },\n\n    ListenerAdd(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (!listenerList) listenerList = this._netPros[event] = new Array();\n      for (var i = 0; i < listenerList.length; i++) {\n        if (listenerList[i] == callback) return;\n      }\n      listenerList.push(callback);\n    },\n\n    ListenerRemove(event, callback) {\n      if (!event || !callback) return;\n      var listenerList = this._netPros[event];\n      if (listenerList) {\n        for (var i = 0; i < listenerList.length; i++) {\n          if (listenerList[i] == callback) {\n            listenerList.splice(i, 1);\n            return;\n          }\n        }\n      }\n    },\n\n    EarAdd(ear) {\n      this._netEars.push(ear);\n    },\n\n    EarRemove(ear) {\n      let pos = this._netEars.indexOf(ear);\n      this._netEars.splice(pos, 1);\n    },\n\n    connectCheck: function() {\n      if (this._socket == null) return;\n\n      if (this._socket.readyState == WebSocket.CONNECTING) {\n        console.log(\"websocket connect timeout\");\n        XNet.dispatchXNet(XOpcodes.XC_NET_CONNECT_TIMEOUT, {\n          cmd: XOpcodes.XC_NET_CONNECT_TIMEOUT,\n          rc: 0\n        });\n        this.connect();\n      }\n\n      if (this._socket.readyState == WebSocket.CLOSED) {\n        console.log(\"websocket reconnect\");\n        //this.connect();\n      }\n    },\n\n    sendString: function(text) {\n      if (!this._socket) return;\n      if (this._socket.readyState == WebSocket.OPEN) {\n        this._socket.send(text);\n      }\n    }\n  }\n});\n\nexport { XNet };\n"]}