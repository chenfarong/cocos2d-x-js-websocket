{"version":3,"sources":["../../../../assets/Script/assets/Script/GSession.js"],"names":["XSession","dsid","token","dsid2","token2","auth","actorId","actorName","power","gameState","isLogin","cc","Class","extends","Component","properties","start"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA,IAAIA,WAAW;AACbC,QAAM,EADO;AAEbC,SAAO,EAFM;AAGbC,SAAO,EAHM;AAIbC,UAAQ,EAJK;AAKbC,QAAM,KALO,EAKA;AACbC,WAAS,EANI;AAObC,aAAW,EAPE;AAQbC,SAAO,CARM;AASbC,aAAW,CATE,EASC;AACdC,WAAS,KAVI,CAUE;AAVF,CAAf;;AAaAC,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfU,GAHL;;AAqBP;;AAEA;;AAEAC,OAzBO,mBAyBC,CAAE;;AAEV;;AA3BO,CAAT;;QA8BShB,WAAAA","file":"GSession.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\n/*\ndsid是auth方式进行验证 通常这种模式是游客模式\ndsid2是auth2方式进行的一种验证\n*/\nvar XSession = {\n  dsid: \"\",\n  token: \"\",\n  dsid2: \"\",\n  token2: \"\",\n  auth: false, //是否验证通过\n  actorId: \"\",\n  actorName: \"\",\n  power: 0,\n  gameState: 0, //游戏阶段\n  isLogin: false //是否在登录状态\n};\n\ncc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // foo: {\n    //     // ATTRIBUTES:\n    //     default: null,        // The default value will be used only when the component attaching\n    //                           // to a node for the first time\n    //     type: cc.SpriteFrame, // optional, default is typeof default\n    //     serializable: true,   // optional, default is true\n    // },\n    // bar: {\n    //     get () {\n    //         return this._bar;\n    //     },\n    //     set (value) {\n    //         this._bar = value;\n    //     }\n    // },\n  },\n\n  // LIFE-CYCLE CALLBACKS:\n\n  // onLoad () {},\n\n  start() {}\n\n  // update (dt) {},\n});\n\nexport { XSession };\n"]}